<!--
 * Released as open source by NCC Group Plc - http://www.nccgroup.com/
 * 
 * Developed by Felix Ingram, (felix.ingram@nccgroup.com)
 * 
 * http://www.github.com/nccgroup/tybocer
 * 
 * Released under AGPL. See LICENSE for more information
-->
<Window x:Class="CodeNaviWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:graph="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
        xmlns:gxl="clr-namespace:GraphX;assembly=GraphX"
        xmlns:Model="clr-namespace:CodeNaviWPF.Models"
        xmlns:local="clr-namespace:CodeNaviWPF"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:zb="clr-namespace:GraphX.Xceed.Wpf.Toolkit.Zoombox;assembly=GraphX"
        Title="GraphView" 
        Height="900" 
        Width="1500"
        WindowStartupLocation="CenterScreen"
        WindowState="Normal"
        x:Name="root"
    >
    <Window.CommandBindings>
        <CommandBinding Command="local:Commands.SearchString" Executed="SearchString" />
    </Window.CommandBindings>
    <Window.Resources>

        <HierarchicalDataTemplate DataType="{x:Type Model:DirectoryItem}"
                                  ItemsSource="{Binding Items}">
            <TextBlock Text="{Binding Path=FileName}" ToolTip="{Binding Path=FullPath}" />
        </HierarchicalDataTemplate>

        <DataTemplate DataType="{x:Type Model:FileItem}" >
            <TextBlock Text="{Binding Path=FileName}" ToolTip="{Binding Path=FullPath}" />
        </DataTemplate>

        <DataTemplate x:Key="fileBrowserTemplate">
            <StackPanel>
                <Button Name="DirPicker" Content="Choose root directory" Click="DirPicker_Click"/>
                <TreeView Name="DirView" ItemsSource="{Binding Files}" Height="300" Width="400">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <EventSetter Event="TreeViewItem.Expanded" Handler="OnTreeItemExpand" />
                            <EventSetter Event="MouseDoubleClick" Handler="OnTreeNodeDoubleClick"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="fileContentView">
            <StackPanel>
                <Border BorderThickness="3" BorderBrush="BurlyWood">
                    <avalonEdit:TextEditor 
                        Width="400" 
                        Height="400" 
                        Document="{Binding Path=Document}" 
                        IsReadOnly="True"
                        ShowLineNumbers="True"
                        Tag="{Binding ElementName=root}"
                        SyntaxHighlighting="C#"
                        FontFamily="Courier New"
                        >
                        <avalonEdit:TextEditor.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Search..." Command="local:Commands.SearchString" />
                            </ContextMenu>
                        </avalonEdit:TextEditor.ContextMenu>
                    </avalonEdit:TextEditor>
                </Border>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="searchResultsView">
            <StackPanel>
                <Border BorderThickness="3" BorderBrush="BurlyWood">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto">
                        <DataGrid ItemsSource="{Binding Results}" Height="500" IsReadOnly="True" AutoGenerateColumns="False">
                            <DataGrid.ItemContainerStyle>
                                <Style TargetType="DataGridRow">
                                    <EventSetter Event="MouseDoubleClick"
                            Handler="DataGrid_MouseDoubleClick" />
                                </Style>
                            </DataGrid.ItemContainerStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Path" Binding="{Binding Path=RelPath}"></DataGridTextColumn>
                                <DataGridTextColumn Header="File" Binding="{Binding Path=FileName}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Ext" Binding="{Binding Path=Extension}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Line#" Binding="{Binding Path=LineNumber}"></DataGridTextColumn>
                                <DataGridTextColumn Header="Line" Binding="{Binding Path=Line}"></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </ScrollViewer>

                </Border>
            </StackPanel>
        </DataTemplate>

        <local:VertexTemplateSelector
            x:Key="vertexTemplateSelector" 
            FileBrowserTemplate="{StaticResource fileBrowserTemplate}"
            FileContentView="{StaticResource fileContentView}"
            SearchResultsView="{StaticResource searchResultsView}"
            />

        <!-- EDGE CONTROL -->
        <Style TargetType="{x:Type gxl:EdgeControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type gxl:EdgeControl}">
                        <Grid>
                            <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="2" MinWidth="1" MinHeight="1"
                          ToolTip="{TemplateBinding ToolTip}"
                          x:Name="PART_edgePath"/>
                            <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="2" MinWidth="1" MinHeight="1" 
                            x:Name="PART_edgeArrowPath"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="MinWidth"
                Value="1" />
            <Setter Property="MinHeight"
                Value="1" />
            <Setter Property="Background"
                Value="Red" />
            <Setter Property="Foreground"
                Value="Silver" />
            <Setter Property="Opacity"
                Value="1" />

            <Setter Property="ToolTip">
                <Setter.Value>
                    <Border BorderBrush="Black" BorderThickness="2" CornerRadius="8" Background="White" UseLayoutRounding="True">
                        <TextBlock FontWeight="Bold" TextDecorations="Underline" Text="{Binding ToolTipText}" Margin="3"/>
                    </Border>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="True">
                    <Setter Property="Foreground" Value="Gold"/>
                    <Setter Property="StrokeThickness" Value="5"/>
                </Trigger>
            </Style.Triggers>

        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <!-- VERTEX CONTROL -->
            <Style TargetType="{x:Type gxl:VertexControl}">
                <!-- Set background color through attached property -->
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="10,5,10,5"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type gxl:VertexControl}">
                            <ContentControl Name="TestControl" ContentTemplateSelector="{StaticResource vertexTemplateSelector}" Content="{Binding}"/>
                        </ControlTemplate>
                    </Setter.Value>
                    <!--<Setter.Value>
                <ControlTemplate TargetType="{x:Type gxl:VertexControl}">-->
                    <!-- We are using attached properties as value storage to be able to change them in child template also.
                    So we are binding here only. -->
                    <!--                   <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
							CornerRadius="10,10,10,10"
						Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Hello {Binding RelativeSource={RelativeSource TemplatedParent}, Path=Vertex.Text}" Grid.Row="1" HorizontalAlignment="Center" Foreground="Black" />
                            <Image Source="{Binding DataImage}" Margin="3"  Width="80" Stretch="UniformToFill"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
			</Setter.Value>-->
                </Setter>

                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Border BorderBrush="Black" BorderThickness="2" CornerRadius="8" Background="White" UseLayoutRounding="True">
                            <StackPanel Orientation="Vertical">
                                <TextBlock FontWeight="Bold" TextDecorations="Underline" Text="8888{Binding Text}" Margin="3" HorizontalAlignment="Center"/>
                                <Image Source="{Binding DataImage}" Margin="3" Grid.Row="1" Width="80" Stretch="UniformToFill"/>
                            </StackPanel>
                        </Border>
                    </Setter.Value>
                </Setter>

                <!-- VERTEX DRAGGING CONTROL -->
                <Setter Property="gxl:DragBehaviour.IsDragEnabled"
                Value="False" />
                <Setter Property="gxl:DragBehaviour.UpdateEdgesOnMove"
                Value="True" />


                <Style.Triggers>
                    <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="True">
                        <Setter Property="BorderBrush" Value="Gold"/>
                    </Trigger>
                </Style.Triggers>

            </Style>

            <!--<ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="Templates/ThemedGraphXTemplates.xaml"/>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>-->
        </Grid.Resources>
        <zb:Zoombox x:Name="tg_zoomctrl" Grid.Row="2">
            <Model:PocGraphLayout x:Name="tg_Area" DefaultLayoutAlgorithm="KK" AsyncAlgorithmCompute="True">
                <Model:PocGraphLayout.Resources>
                    <!--<ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="Templates/TransparentTooltips.xaml"/>
                        </ResourceDictionary.MergedDictionaries>
                    </ResourceDictionary>-->
                </Model:PocGraphLayout.Resources>
            </Model:PocGraphLayout>
        </zb:Zoombox> 
    </Grid>
</Window>
