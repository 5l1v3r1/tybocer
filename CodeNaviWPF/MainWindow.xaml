<!--
 * Released as open source by NCC Group Plc - http://www.nccgroup.com/
 * 
 * Developed by Felix Ingram, (felix.ingram@nccgroup.com)
 * 
 * http://www.github.com/nccgroup/tybocer
 * 
 * Released under AGPL. See LICENSE for more information
-->
<Window x:Class="CodeNaviWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:graph="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls"
        xmlns:gxl="clr-namespace:GraphX;assembly=GraphX"
        xmlns:model="clr-namespace:CodeNaviWPF.Models"
        xmlns:utils="clr-namespace:CodeNaviWPF.Utils"
        xmlns:local="clr-namespace:CodeNaviWPF"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:zb="clr-namespace:GraphX.Xceed.Wpf.Toolkit.Zoombox;assembly=GraphX"
        xmlns:props="clr-namespace:CodeNaviWPF.Properties"
        Title="GraphView" 
        Height="900" 
        Width="1500"
        WindowStartupLocation="CenterScreen"
        WindowState="Normal"
        x:Name="root"
    >
    <Window.CommandBindings>
        <CommandBinding Command="local:Commands.SearchString" Executed="SearchString" />
        <CommandBinding Command="local:Commands.ExpanderRelayout" Executed="ExpanderRelayout" />
        <CommandBinding Command="local:Commands.OnCloseVertex" Executed="OnCloseVertex" />
    </Window.CommandBindings>
    <Window.Resources>

        <HierarchicalDataTemplate DataType="{x:Type model:DirectoryItem}"
                                  ItemsSource="{Binding Items}">
            <TextBlock Text="{Binding Path=FileName}" ToolTip="{Binding Path=FullPath}" />
        </HierarchicalDataTemplate>

        <DataTemplate DataType="{x:Type model:FileItem}" >
            <TextBlock Text="{Binding Path=FileName}" ToolTip="{Binding Path=FullPath}" />
        </DataTemplate>

        <DataTemplate x:Key="fileBrowserTemplate">
            <Border BorderThickness="3" BorderBrush="BurlyWood" CornerRadius="8,8,8,8">
                <StackPanel>
                    <StackPanel.Resources>
                        <utils:StringToBool x:Key="mystringtoboolconverter" />
                    </StackPanel.Resources>
                    <Button Name="DirPicker" Content="Choose root directory" Click="DirPicker_Click"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBox Width="300" Name="SearchTerm" Text="{Binding Path=SearchTerm}"/>
                        <Button Name="RunSearch" 
                                IsEnabled="{Binding Path=FilePath, Converter={StaticResource ResourceKey=mystringtoboolconverter}}"
                                Command="local:Commands.SearchString" Content="Search" 
                                />
                    </StackPanel>
                    <TreeView Name="DirView" ItemsSource="{Binding Files}" Height="300" Width="400">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <EventSetter Event="TreeViewItem.Expanded" Handler="OnTreeItemExpand" />
                                <EventSetter Event="MouseDoubleClick" Handler="OnTreeNodeDoubleClick"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                    </TreeView>
                </StackPanel>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="fileContentView">
            <Border BorderThickness="3" BorderBrush="BurlyWood" CornerRadius="8,8,8,8">
                <Expander IsExpanded="True" Expanded="ExpanderRelayout" Collapsed="ExpanderRelayout">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Resources>
                                <BooleanToVisibilityConverter x:Key="mybooltovisibilityconverter" />
                            </StackPanel.Resources>
                            <TextBlock VerticalAlignment="Center">File: <TextBlock Text="{Binding Path=FileName}" /></TextBlock>
                            <Button Margin="30,0,0,0" Content="Close" Command="local:Commands.OnCloseVertex" />
                            <Slider x:Name="fontSize" 
                                    Margin="30,0,0,0" 
                                    Minimum="6" 
                                    Maximum="20" 
                                    Width="100" 
                                    Value="{Binding Source={x:Static props:Settings.Default}, Path=EditorFont.Size, Mode=OneWay}" 
                                    Visibility="{Binding ElementName=editor, Path=IsVisible, Converter={StaticResource ResourceKey=mybooltovisibilityconverter}}"
                                    />
                        </StackPanel>
                    </Expander.Header>


                    <StackPanel>
                        <avalonEdit:TextEditor
                            x:Name="editor"
                            MinWidth="600"
                            MaxWidth="800" 
                            Height="400" 
                            Document="{Binding Path=Document}" 
                            IsReadOnly="True"
                            ShowLineNumbers="True"
                            Tag="{Binding ElementName=root}"
                            SyntaxHighlighting="C#"
                            FontFamily="{Binding Source={x:Static props:Settings.Default}, Path=EditorFont.Name, Mode=OneWay}"
                            FontSize="{Binding ElementName=fontSize, Path=Value, Mode=OneWay}"
                        >
                            <!--FontSize="{Binding Source={x:Static props:Settings.Default}, Path=EditorFont.Size, Mode=OneWay}"-->

                            <avalonEdit:TextEditor.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Search..." Command="local:Commands.SearchString" />
                                </ContextMenu>
                            </avalonEdit:TextEditor.ContextMenu>
                        </avalonEdit:TextEditor>
                    </StackPanel>
                </Expander>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="searchResultsView">
            <Border BorderThickness="3" BorderBrush="BurlyWood" CornerRadius="10">
                <Grid>
                    <Expander IsExpanded="True" Expanded="ExpanderRelayout" Collapsed="ExpanderRelayout">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center">Search for: <TextBlock Text="{Binding Path=SearchString}" /></TextBlock>
                                <Button Margin="30,0,0,0" Content="Close" Command="local:Commands.OnCloseVertex" />
                            </StackPanel>
                        </Expander.Header>
                        <Grid>
                            <Border CornerRadius="0,0,9,9" x:Name="Mask" Background="Black" />
                            <StackPanel>
                                <StackPanel.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=Mask}"/>
                                </StackPanel.OpacityMask>
                                <ProgressBar Height="20"/>
                                <DataGrid Visibility="Collapsed" SizeChanged="DataGrid_SizeChanged" ItemsSource="{Binding Results}" MaxHeight="500" MaxWidth="800" IsReadOnly="True" AutoGenerateColumns="False">
                                    <DataGrid.ItemContainerStyle>
                                        <Style TargetType="DataGridRow">
                                            <EventSetter Event="MouseDoubleClick" Handler="DataGrid_MouseDoubleClick" />
                                        </Style>
                                    </DataGrid.ItemContainerStyle>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Path" Binding="{Binding Path=RelPath}" />
                                        <DataGridTextColumn Header="File" Binding="{Binding Path=FileName}" />
                                        <DataGridTextColumn Header="Line#" Binding="{Binding Path=LineNumber}" />
                                        <DataGridTextColumn Header="Line" Binding="{Binding Path=Line}" FontFamily="{Binding Source={x:Static props:Settings.Default}, Path=EditorFont.Name, Mode=OneWay}" />
                                        <DataGridTextColumn Header="Ext" Binding="{Binding Path=Extension}" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </StackPanel>
                        </Grid>
                    </Expander>
                </Grid>
            </Border>
        </DataTemplate>

        <local:VertexTemplateSelector
            x:Key="vertexTemplateSelector" 
            FileBrowserTemplate="{StaticResource fileBrowserTemplate}"
            FileContentView="{StaticResource fileContentView}"
            SearchResultsView="{StaticResource searchResultsView}"
            />

        <!-- EDGE CONTROL -->
        <Style TargetType="{x:Type gxl:EdgeControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type gxl:EdgeControl}">
                        <Grid>
                            <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="2" MinWidth="1" MinHeight="1"
                          ToolTip="{TemplateBinding ToolTip}"
                          x:Name="PART_edgePath"/>
                            <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="2" MinWidth="1" MinHeight="1" 
                            x:Name="PART_edgeArrowPath"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="MinWidth"
                Value="1" />
            <Setter Property="MinHeight"
                Value="1" />
            <Setter Property="Background"
                Value="Red" />
            <Setter Property="Foreground"
                Value="Silver" />
            <Setter Property="Opacity"
                Value="1" />

            <!--<Setter Property="ToolTip">
                <Setter.Value>
                    <Border BorderBrush="Black" BorderThickness="2" CornerRadius="8" Background="White" UseLayoutRounding="True">
                        <TextBlock FontWeight="Bold" TextDecorations="Underline" Text="{Binding ToolTipText}" Margin="3"/>
                    </Border>
                </Setter.Value>
            </Setter>-->

            <Style.Triggers>
                <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="True">
                    <Setter Property="Foreground" Value="Gold"/>
                    <Setter Property="StrokeThickness" Value="5"/>
                </Trigger>
            </Style.Triggers>

        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <!-- VERTEX CONTROL -->
            <Style TargetType="{x:Type gxl:VertexControl}">
                <!-- Set background color through attached property -->
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="10,5,10,5"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type gxl:VertexControl}">
                            <ContentControl ContentTemplateSelector="{StaticResource vertexTemplateSelector}" Content="{Binding}"/>
                        </ControlTemplate>
                    </Setter.Value>
                    <!--<Setter.Value>
                <ControlTemplate TargetType="{x:Type gxl:VertexControl}">-->
                    <!-- We are using attached properties as value storage to be able to change them in child template also.
                    So we are binding here only. -->
                    <!--                   <Border Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
							CornerRadius="10,10,10,10"
						Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Hello {Binding RelativeSource={RelativeSource TemplatedParent}, Path=Vertex.Text}" Grid.Row="1" HorizontalAlignment="Center" Foreground="Black" />
                            <Image Source="{Binding DataImage}" Margin="3"  Width="80" Stretch="UniformToFill"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
			</Setter.Value>-->
                </Setter>

                <!--<Setter Property="ToolTip">
                    <Setter.Value>
                        <Border BorderBrush="Black" BorderThickness="2" CornerRadius="8" Background="White" UseLayoutRounding="True">
                            <StackPanel Orientation="Vertical">
                                <TextBlock FontWeight="Bold" TextDecorations="Underline" Text="8888{Binding Text}" Margin="3" HorizontalAlignment="Center"/>
                                <Image Source="{Binding DataImage}" Margin="3" Grid.Row="1" Width="80" Stretch="UniformToFill"/>
                            </StackPanel>
                        </Border>
                    </Setter.Value>
                </Setter>-->

                <!-- VERTEX DRAGGING CONTROL -->
                <Setter Property="gxl:DragBehaviour.IsDragEnabled" Value="False" />
                <Setter Property="gxl:DragBehaviour.UpdateEdgesOnMove" Value="True" />

                <Style.Triggers>
                    <Trigger Property="gxl:HighlightBehaviour.Highlighted" Value="True">
                        <Setter Property="BorderBrush" Value="Gold"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Expander IsExpanded="False" Grid.Row="0" Header="Preferences">
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal">
                    <Label Target="{Binding ElementName=excludedExts}">Excluded Extensions</Label>
                    <TextBox x:Name="excludedExts" Text="{Binding Source={x:Static props:Settings.Default}, Path=ExcludedExtensions, Mode=TwoWay}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Target="{Binding ElementName=excludedDirs}">Excluded Directories</Label>
                    <TextBox x:Name="excludedDirs" Text="{Binding Source={x:Static props:Settings.Default}, Path=ExcludedDirectories, Mode=TwoWay}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Target="{Binding ElementName=editorFont}">Editor Font</Label>
                    <TextBox x:Name="editorFont" Text="{Binding Source={x:Static props:Settings.Default}, Path=EditorFont, Mode=TwoWay}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Target="{Binding ElementName=ctagsLocation}">Ctags Location</Label>
                    <TextBox x:Name="ctagsLocation" TextChanged="CheckForCtags" Text="{Binding Source={x:Static props:Settings.Default}, Path=CtagsLocation, Mode=TwoWay}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Minimise edge distance</TextBlock>
                    <CheckBox x:Name="mini" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Layer dist</TextBlock>
                    <TextBox x:Name="layerdist" Text="100" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Vert dist</TextBlock>
                    <TextBox x:Name="vertdist" Text="100" />
                </StackPanel>
            </StackPanel>
        </Expander>
        <zb:Zoombox x:Name="zoom_control" Grid.Row="1">
            <model:PocGraphLayout x:Name="graph_area" DefaultLayoutAlgorithm="KK" AsyncAlgorithmCompute="True" />
        </zb:Zoombox>
    </Grid>
</Window>
